{"version":3,"file":"static/js/415.9b96f64e.chunk.js","mappings":"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","sources":["components/Container/Container.jsx","components/Movies/Movie.styled.js","components/Movies/MovieList.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst Wrapper = styled('section')`\n  padding: 20px 30px;\n  text-align: center;\n`;\n\nexport const Container = ({ children }) => {\n  return <Wrapper>{children}</Wrapper>;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled('ul')`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  text-align: center;\n  gap: 15px;\n  list-style: none;\n`;\n\nexport const ListItem = styled('li')`\n  width: 100%;\n  text-align: center;\n  transition: all 300ms ease-in-out;\n  border-radius: 2%;\n  &:hover {\n    box-shadow: 0 0 13px 0 rgb(3, 37, 65);\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  color: inherit;\n  text-decoration: none;\n`;\n\nexport const Image = styled('img')`\n  display: block;\n  margin: 0 auto;\n  width: 100%;\n  border-radius: 2%;\n`;\n\nexport const Wrapper = styled('div')`\n  display: flex;\n  gap: 30px;\n  text-align: left;\n`;\n\nexport const Thumb = styled('div')`\n  width: 30%;\n`;\n\nexport const Poster = styled('img')`\n  width: 100%;\n`;\n\nexport const Description = styled('div')`\n  width: 70%;\n`;\n\nexport const GenresItem = styled('li')`\n  padding: 8px;\n  font-size: 13px;\n  color: white;\n  background-color: rgb(3, 37, 65);\n  border-radius: 10px;\n`;\n\nexport const MovieNav = styled('ul')`\n  display: flex;\n  gap: 50px;\n  padding: 20px 0;\n  margin: 0;\n  list-style: none;\n`;\n\nexport const NavWrapper = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: 15px;\n  background-color: #fff;\n`;\n\nexport const MovieLink = styled(Link)`\n  font-size: 20px;\n  font-weight: 600;\n  color: rgb(3, 37, 65);\n  text-decoration: none;\n`;\n\nexport const BackLink = styled(Link)`\n  padding: 13px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 50px;\n  background-color: rgb(3, 37, 65);\n  font-size: 1.3em;\n  color: white;\n  border: none;\n  border-radius: 20px;\n  margin: 10px;\n  text-decoration: none;\n`;\n\nexport const GenresList = styled('ul')`\n  list-style: none;\n  display: inline-flex;\n  gap: 10px;\n`;\n\nexport const GenresTitle = styled('h3')`\n  display: inline;\n`;\n","import { ListItem, List, StyledLink, Image } from './Movie.styled';\n\nexport const MovieList = ({ movies, from }) => {\n  return (\n    <List>\n      {movies &&\n        movies.map(({ name, title, id, poster_path }) => (\n          <ListItem key={id}>\n            <StyledLink to={`/movies/${id}`} state={{ from: from }}>\n              <Image\n                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                alt={name || title}\n              />\n            </StyledLink>\n          </ListItem>\n        ))}\n    </List>\n  );\n};\n","import { Container } from 'components/Container/Container';\nimport { MovieList } from 'components/Movies/MovieList';\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { API } from 'services/api';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    API.getTrending()\n      .then(res => {\n        setTrendingMovies(res.results);\n      })\n      .catch(err => {\n        Error(err.message);\n      });\n  }, []);\n\n  return (\n    <main>\n      <Container>\n        <h2>Trending Today</h2>\n        <MovieList movies={trendingMovies} from={location.pathname} />\n      </Container>\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = 'e70bd309128506851c85e884e52b1998';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getTrending = async () => {\n  try {\n    const result = await axios.get(`${BASE_URL}trending/movie/day`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nconst getSearchMovies = async query => {\n  try {\n    const result = await axios.get(`${BASE_URL}search/movie`, {\n      params: {\n        query: query,\n        api_key: API_KEY,\n      },\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nconst getMovieById = async (id, info = '') => {\n  try {\n    const result = await axios.get(`${BASE_URL}movie/${id}${info}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const API = {\n  getTrending,\n  getSearchMovies,\n  getMovieById,\n};\n"],"names":["Wrapper","styled","Container","children","List","ListItem","StyledLink","Link","Image","Thumb","Poster","Description","GenresItem","MovieNav","NavWrapper","MovieLink","BackLink","GenresList","GenresTitle","MovieList","movies","from","map","name","title","id","poster_path","to","state","src","alt","useState","trendingMovies","setTrendingMovies","location","useLocation","useEffect","API","then","res","results","catch","err","Error","message","pathname","API_KEY","BASE_URL","getTrending","axios","params","api_key","result","data","getSearchMovies","query","getMovieById","info"],"sourceRoot":""}